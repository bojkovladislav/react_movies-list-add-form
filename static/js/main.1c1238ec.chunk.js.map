{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","required","onChange","isMatch","url","useState","Math","random","toString","slice","id","touched","setToched","hasError","trim","htmlFor","classNames","type","placeholder","event","target","onBlur","NewMovie","onAdd","count","setCount","initialMovieState","setMovie","handleChange","inputValue","property","currentMovie","RegExp","join","test","onSubmit","e","preventDefault","disabled","checkForDisablingButton","App","moviesFromServer","setMovies","newMovie","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"2uEAQaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,sBAAKC,UAAU,OAAO,UAAQ,aAA9B,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,YACP,uBACA,mBAAGC,KAAMP,EAAMQ,QAAf,0BA5BkC,ECE7BC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKT,UAAU,SAAf,SACGS,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMY,OAFE,KAFsB,E,8BCOpC,IAAMC,EAA6B,SAAC,GAQpC,IAPLC,EAOI,EAPJA,KACAC,EAMI,EANJA,MAMI,IALJC,aAKI,MALIF,EAKJ,MAJJG,gBAII,aAHJC,gBAGI,MAHO,WAAQ,EAGf,EAFJC,EAEI,EAFJA,QACAC,EACI,EADJA,IAEA,EAAaC,oBAAS,2BAASP,EAAT,YAZfQ,KAAKC,SAASC,WAAWC,MAAM,GAYhB,IAAfC,EAAP,oBACA,EAA6BL,oBAAS,GAAtC,mBAAOM,EAAP,KAAgBC,EAAhB,KACMC,EAAWF,GAAWV,IAAaF,EAAMe,OAE/C,OACE,sBAAK7B,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQ8B,QAASL,EAAlC,SACGV,IAGH,qBAAKf,UAAU,UAAf,SACE,uBACEyB,GAAIA,EACJ,0BAAkBZ,GAClBb,UAAW+B,IAAW,QAAS,CAC7B,YAAaH,IAEfI,KAAK,OACLC,YAAW,gBAAWlB,GACtBD,MAAOA,EACPG,SAAU,SAAAiB,GAAK,OAAIjB,EAASiB,EAAMC,OAAOrB,MAA1B,EACfsB,OAAQ,kBAAMT,GAAU,EAAhB,MAIXC,GACC,mBAAG5B,UAAU,iBAAb,mBAAkCe,EAAlC,mBAGCG,GAAWC,GACZ,mBAAGnB,UAAU,iBAAb,mBAAkCe,EAAlC,uBAIP,ECpDYsB,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,EAA0BlB,mBAAS,GAAnC,mBAAOmB,EAAP,KAAcC,EAAd,KACMC,EAAoB,CACxBrC,MAAO,GACPC,YAAa,GACbH,OAAQ,GACRK,QAAS,GACTI,OAAQ,IAEV,EAA0BS,mBAASqB,GAAnC,mBAAO1C,EAAP,KAAc2C,EAAd,KAEMC,EAAe,SAACC,EAAoBC,GACxCH,GAAS,SAAAI,GAAY,kCAChBA,GADgB,kBAElBD,EAAWD,GAFO,GAKtB,EAEK1B,EAAU,SAACC,GAQf,OAPgB,IAAI4B,OAAO,CACzB,mEACA,6CACA,yDACA,0BACAC,KAAK,KAEQC,KAAK9B,EAAIU,OACzB,EA6BD,OACE,uBACE7B,UAAU,WAEVkD,SAXa,SAACC,GAChBA,EAAEC,iBACFV,EAASD,GACTD,EAASD,EAAQ,GACjBD,EAAMvC,EACP,EAGC,UAKE,oBAAIC,UAAU,QAAd,yBAEA,cAAC,EAAD,CACEa,KAAK,QACLE,MAAM,QACND,MAAOf,EAAMK,MACba,SAAU,SAAC2B,GAAD,OAAgBD,EAAaC,EAAY,QAAzC,EACV5B,UAAQ,IAGV,cAAC,EAAD,CACEH,KAAK,cACLE,MAAM,cACND,MAAOf,EAAMM,YACbY,SAAU,SAAC2B,GAAD,OAAgBD,EAAaC,EAAY,cAAzC,IAGZ,cAAC,EAAD,CACE/B,KAAK,SACLE,MAAM,YACND,MAAOf,EAAMG,OACbe,SAAU,SAAC2B,GAAD,OAAgBD,EAAaC,EAAY,SAAzC,EACVzB,IAAKpB,EAAMG,OACXgB,QAASA,EAAQnB,EAAMG,QACvBc,UAAQ,IAGV,cAAC,EAAD,CACEH,KAAK,UACLE,MAAM,WACND,MAAOf,EAAMQ,QACbU,SAAU,SAAC2B,GAAD,OAAgBD,EAAaC,EAAY,UAAzC,EACVzB,IAAKpB,EAAMQ,QACXW,QAASA,EAAQnB,EAAMQ,SACvBS,UAAQ,IAGV,cAAC,EAAD,CACEH,KAAK,SACLE,MAAM,UACND,MAAOf,EAAMY,OACbM,SAAU,SAAC2B,GAAD,OAAgBD,EAAaC,EAAY,SAAzC,EACV5B,UAAQ,IAGV,qBAAKhB,UAAU,mBAAf,SACE,qBAAKA,UAAU,UAAf,SACE,wBACEgC,KAAK,SACL,UAAQ,gBACRhC,UAAU,iBACVqD,SApFsB,WAC9B,IACEjD,EAIEL,EAJFK,MACAF,EAGEH,EAHFG,OACAK,EAEER,EAFFQ,QACAI,EACEZ,EADFY,OAGF,QAAIP,EAAMyB,QACL3B,EAAO2B,QACPlB,EAAOkB,QACPtB,EAAQsB,QACRX,EAAQX,IACRW,EAAQhB,GAKd,CAkEmBoD,GAJZ,uBAlDCf,EA8DV,E,QC3HYgB,EAAM,WACjB,MAA4BnC,mBAASoC,GAArC,mBAAO/C,EAAP,KAAegD,EAAf,KAOA,OACE,sBAAKzD,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYS,OAAQA,MAEtB,qBAAKT,UAAU,UAAf,SACE,cAAC,EAAD,CAAUsC,MAZE,SAACoB,GACjBD,GAAU,SAAAE,GAAa,4BACjBA,GADiB,CACFD,GADE,GAGxB,QAYF,ECrBDE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,Q","file":"static/js/main.1c1238ec.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n  isMatch?: boolean,\n  url?: string,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onChange = () => {},\n  isMatch,\n  url,\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n  const [touched, setToched] = useState(false);\n  const hasError = touched && required && !value.trim();\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setToched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n\n      {(!isMatch && url) && (\n        <p className=\"help is-danger\">{`${label} is not correct`}</p>\n      )}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  onAdd: (movie: Movie) => void;\n}\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const initialMovieState = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n  const [movie, setMovie] = useState(initialMovieState);\n\n  const handleChange = (inputValue: string, property: string) => {\n    setMovie(currentMovie => ({\n      ...currentMovie,\n      [property]: inputValue,\n    }\n    ));\n  };\n\n  const isMatch = (url: string) => {\n    const pattern = new RegExp([\n      '^((([A-Za-z]{3,9}:(?:\\\\/\\\\/)?)(?:[-;:&=+$,\\\\w]+@)?[A-Za-z0-9.-]+',\n      '|(?:www\\\\.|[-;:&=+$,\\\\w]+@)[A-Za-z0-9.-]+)',\n      '((?:\\\\/[+~%\\\\/\\\\.\\\\w-_]*)?\\\\??(?:[-+=&;%@,\\\\.\\\\w_]*)#?',\n      '(?:[,.!/\\\\\\\\\\\\w]*))?)$',\n    ].join(''));\n\n    return pattern.test(url.trim());\n  };\n\n  const checkForDisablingButton = () => {\n    const {\n      title,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = movie;\n\n    if (title.trim()\n      && imgUrl.trim()\n      && imdbId.trim()\n      && imdbUrl.trim()\n      && isMatch(imdbUrl)\n      && isMatch(imgUrl)) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setMovie(initialMovieState);\n    setCount(count + 1);\n    onAdd(movie);\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={onSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={movie.title}\n        onChange={(inputValue) => handleChange(inputValue, 'title')}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={movie.description}\n        onChange={(inputValue) => handleChange(inputValue, 'description')}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={movie.imgUrl}\n        onChange={(inputValue) => handleChange(inputValue, 'imgUrl')}\n        url={movie.imgUrl}\n        isMatch={isMatch(movie.imgUrl)}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={movie.imdbUrl}\n        onChange={(inputValue) => handleChange(inputValue, 'imdbUrl')}\n        url={movie.imdbUrl}\n        isMatch={isMatch(movie.imdbUrl)}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={movie.imdbId}\n        onChange={(inputValue) => handleChange(inputValue, 'imdbId')}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={checkForDisablingButton()}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n  const addAMovie = (newMovie: Movie) => {\n    setMovies(currentMovies => (\n      [...currentMovies, newMovie]\n    ));\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addAMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}